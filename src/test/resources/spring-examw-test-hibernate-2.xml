<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	
	<!--配置数据源-->
	<bean name="dataSourceSql" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!--数据链接字符串。 -->
		<property name="url" value="jdbc:jtds:sqlserver://192.168.1.246:1433/cyedu_examsys"/>
		<!--数据库账号。 -->
		<property name="username" value="sa"/>
		<!--数据库密码 。-->
		<property name="password" value="123456"/>
		<!--初始化连接大小。 -->
		<property name="initialSize" value="0"/>
		<!--连接池最大使用连接数量。-->
		<property name="maxActive" value="20"/>
		<!--连接池最大空闲。 -->
		<property name="maxIdle" value="20"/>
		<!--连接池最小空闲。-->
		<property name="minIdle" value="0"/>
		<!--获取连接最大等待时间。 -->
		<property name="maxWait" value="60000"/>
		<property name="validationQuery" value="SELECT 1" /> 
  		<property name="testOnBorrow" value="false" /> 
  		<property name="testOnReturn" value="false" /> 
  		<property name="testWhileIdle" value="true" />
		<!--配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 。-->
		<property name="timeBetweenEvictionRunsMillis" value="60000" /> 
		<!--配置一个连接在池中最小生存的时间，单位是毫秒 --> 
  		<property name="minEvictableIdleTimeMillis" value="25200000" /> 
  		<!--打开removeAbandoned功能 --> 
  		<property name="removeAbandoned" value="true" /> 
		<!--1800秒，也就是30分钟   --> 
  		<property name="removeAbandonedTimeout" value="1800" /> 
		<!--关闭abanded连接时输出错误日志 --> 
  		<property name="logAbandoned" value="true" /> 
		<!--监控数据库 --> 
  		<!--<property name="filters" value="stat" /> --> 
  		<property name="filters" value="mergeStat" /> 
	</bean>
	<!--配置hibernate session工厂-->
	<bean id="sessionFactorySql" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!--数据源-->
		<property name="dataSource" ref="dataSourceSql"/>
		<!--hibernates属性-->
		<property name="hibernateProperties">
			<props>
				<!-- 根据映射更新表结构 -->
				<!-- <prop key="hibernate.hbm2ddl.auto">update</prop> -->
				<!--hibernate SQL方言-->
				<prop key="hibernate.dialect">org.hibernate.dialect.SQLServer2008Dialect</prop>
				<!--是否显示SQL语句-->
				<prop key="hibernate.show_sql">true</prop>
				<!--是否格式化语句-->
				<prop key="hibernate.format_sql">true</prop>
				<prop key="current_session_context_class">thread</prop>
				<!-- 二级缓存 -->
				<!--是否启用二级缓存 -->
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<!-- 是否开启查询缓存 -->
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<!-- 配置RegionFactory为Ehcache的RegionFactory -->
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
			</props>
		</property>
		<!--hibernate配置文件-->
		<property name="mappingLocations">
			<list>
				<value>file:src/test/resources/com/examw/test/junit/domain/*.hbm.xml</value>
			</list>
		</property>
	</bean>
	<!--配置事务管理器-->
	<bean name="transactionManagerSql" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactorySql" />
    </bean>
    <!--拦截器方式配置事务-->
	<tx:advice id="transactionAdviceSql"  transaction-manager="transactionManagerSql">
		<tx:attributes>
			<tx:method name="get*" propagation="SUPPORTS"/>
			<tx:method name="find*" propagation="SUPPORTS"/>
			<tx:method name="load*" propagation="SUPPORTS"/>
			<tx:method name="search*" propagation="SUPPORTS"/>
			<tx:method name="datagrid*" propagation="SUPPORTS"/>
			<tx:method name="*" propagation="SUPPORTS"/>
		</tx:attributes>
	</tx:advice>
	<!--切面配置-->
	<aop:config>
		<aop:pointcut id="transactionPointcutSql" expression="execution(* com.examw.test.junit.service..*.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcutSql" advice-ref="transactionAdviceSql"/>
	</aop:config>
</beans>